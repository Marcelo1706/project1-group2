/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.kodigo.project1.group2.views;

import com.github.lgooddatepicker.components.DatePickerSettings;
import com.github.lgooddatepicker.components.TimePickerSettings;
import java.awt.event.WindowEvent;
import java.sql.Timestamp;
import java.util.ArrayList;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import org.kodigo.project1.group2.controllers.AircraftController;
import org.kodigo.project1.group2.controllers.CityController;
import org.kodigo.project1.group2.controllers.CountryController;
import org.kodigo.project1.group2.controllers.FlightController;
import org.kodigo.project1.group2.models.Aircraft;
import org.kodigo.project1.group2.utils.ComboItem;

/**
 *
 * @author miner
 */
public class UpdateFlight extends javax.swing.JFrame {
 private final CountryController countryController = new CountryController();
    private final CityController cityController = new CityController();
    private final FlightController flightController = new FlightController();
    private final AircraftController aircraftController = new AircraftController();
    /**
     * Creates new form UpdateFlight
     */
    public UpdateFlight() {
        initComponents();
        setLocationRelativeTo(null);
        loadCountryComboBox();
        loadAircraftComboBox();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cbdestinationcountry = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        txtflightnumber = new javax.swing.JTextField();
        cbdestinationcity = new javax.swing.JComboBox<>();
        DatePickerSettings dateSettings = new DatePickerSettings();
        TimePickerSettings timeSettings = new TimePickerSettings();
        dateSettings.setAllowKeyboardEditing(false);
        dateSettings.setAllowEmptyDates(false);
        timeSettings.setAllowEmptyTimes(false);
        timeSettings.setDisplaySpinnerButtons(true);
        timeSettings.setInitialTimeToNow();
        departuredatepicker = new com.github.lgooddatepicker.components.DateTimePicker(dateSettings,timeSettings);
        jLabel4 = new javax.swing.JLabel();
        DatePickerSettings dateSettings2 = new DatePickerSettings();
        TimePickerSettings timeSettings2 = new TimePickerSettings();
        dateSettings2.setAllowKeyboardEditing(false);
        dateSettings2.setAllowEmptyDates(false);
        timeSettings2.setAllowEmptyTimes(false);
        timeSettings2.setDisplaySpinnerButtons(true);
        timeSettings2.setInitialTimeToNow();
        ArrivalTimePicker = new com.github.lgooddatepicker.components.DateTimePicker(dateSettings2,timeSettings2);
        cborigincountry = new javax.swing.JComboBox<ComboItem>();
        jLabel10 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        cbaircraft = new javax.swing.JComboBox<ComboItem>();
        jLabel6 = new javax.swing.JLabel();
        cborigincity = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jButton2.setText("Cancel");

        jButton1.setText("Update Flight");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel11.setText("Update Flight Management");
        jLabel11.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N

        jLabel8.setText("Departure Time");
        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        jLabel9.setText("Arrival Time");
        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        jLabel2.setText("Origin Country");
        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        cbdestinationcountry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbdestinationcountryActionPerformed(evt);
            }
        });

        jLabel3.setText("Origin City");
        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        jLabel4.setText("Destination Country");
        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        cborigincountry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cborigincountryActionPerformed(evt);
            }
        });

        jLabel10.setText("Aircraft");
        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        jLabel1.setText("Flight Number");
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        jLabel6.setText("Destination City");
        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(0, 122, Short.MAX_VALUE)
                .addComponent(jLabel11)
                .addGap(90, 90, 90))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(93, 93, 93)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(57, 57, 57))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(33, 33, 33)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(20, 20, 20)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel8)
                                .addComponent(jLabel9)
                                .addComponent(jLabel10))
                            .addGap(0, 0, Short.MAX_VALUE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel2)
                                .addComponent(jLabel3)
                                .addComponent(jLabel4)
                                .addComponent(jLabel6)
                                .addComponent(jLabel1))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(cborigincity, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cbdestinationcity, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cbdestinationcountry, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(departuredatepicker, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(ArrivalTimePicker, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cborigincountry, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtflightnumber)
                                    .addComponent(cbaircraft, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                    .addGap(34, 34, 34)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 356, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton1))
                .addContainerGap())
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(56, 56, 56)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(txtflightnumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(24, 24, 24)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cborigincountry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2))
                    .addGap(23, 23, 23)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cborigincity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3))
                    .addGap(20, 20, 20)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cbdestinationcountry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4))
                    .addGap(18, 18, 18)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cbdestinationcity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6))
                    .addGap(18, 18, 18)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel8)
                        .addComponent(departuredatepicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(23, 23, 23)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel9)
                        .addComponent(ArrivalTimePicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, 18)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel10)
                        .addComponent(cbaircraft, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap(47, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        updateFlight();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void updateFlight(){
         String flightNumber = txtflightnumber.getText();
        Object originCity = cborigincity.getSelectedItem();
        int originCityId = Integer.parseInt(((ComboItem)originCity).getValue());
        Object destinationCity = cbdestinationcity.getSelectedItem();
        int destinationCityId = Integer.parseInt(((ComboItem)destinationCity).getValue());
        Timestamp departureTime = Timestamp.valueOf(departuredatepicker.getDateTimeStrict());
        Timestamp arrivalTime = Timestamp.valueOf(ArrivalTimePicker.getDateTimeStrict());
        Object selectedAircraft = cbaircraft.getSelectedItem();
        int aircraftId = Integer.parseInt(((ComboItem)selectedAircraft).getValue());
        String model = ((ComboItem)selectedAircraft).toString();
        Aircraft aircraft = new Aircraft(aircraftId,model);

        if(flightController.updateFlight(flightNumber, originCityId, destinationCityId, departureTime, arrivalTime, aircraft)){
            JOptionPane.showMessageDialog(null,"Flight successfully update","Success",JOptionPane.INFORMATION_MESSAGE);
            this.dispatchEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
        }else{
            JOptionPane.showMessageDialog(null,"An error ocurred","Error",JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void cbdestinationcountryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbdestinationcountryActionPerformed
        if(cbdestinationcity.getItemCount() > 0){
            cbdestinationcity.removeAllItems();
        }
        String country = cbdestinationcountry.getSelectedItem().toString();
        loadCityComboBox(country,cbdestinationcity);
    }//GEN-LAST:event_cbdestinationcountryActionPerformed

    private void cborigincountryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cborigincountryActionPerformed

        if(cborigincity.getItemCount() > 0){
            cborigincity.removeAllItems();
        }
        String country = cborigincountry.getSelectedItem().toString();
        loadCityComboBox(country,cborigincity);
    }//GEN-LAST:event_cborigincountryActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UpdateFlight.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UpdateFlight.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UpdateFlight.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UpdateFlight.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UpdateFlight().setVisible(true);
            }
        });
    }

    private void loadCountryComboBox(){
        ArrayList<ComboItem> comboItems = countryController.loadCountriesComboItem();
        comboItems.forEach((item) -> {
            cborigincountry.addItem(item);
            cbdestinationcountry.addItem(item);
        });
    }
    
    private void loadCityComboBox(String country, javax.swing.JComboBox<ComboItem> combobox){
        if(combobox.getItemCount() > 0){
            combobox.removeAllItems();
        }
        ArrayList<ComboItem> comboItems = cityController.loadCitiesFromCertainCountry(country);
        comboItems.forEach((item) -> {
            combobox.addItem(item);
        });
    }
    
    public void loadAircraftComboBox(){
        ArrayList<Aircraft> aircrafts = aircraftController.getAircraftList();
        aircrafts.forEach((aircraft) -> {
            cbaircraft.addItem(new ComboItem(aircraft.getModel() , String.valueOf(aircraft.getAircraftId())));
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public com.github.lgooddatepicker.components.DateTimePicker ArrivalTimePicker;
    public javax.swing.JComboBox<ComboItem> cbaircraft;
    public javax.swing.JComboBox<ComboItem> cbdestinationcity;
    public javax.swing.JComboBox<ComboItem> cbdestinationcountry;
    public javax.swing.JComboBox<ComboItem> cborigincity;
    public javax.swing.JComboBox<ComboItem> cborigincountry;
    public com.github.lgooddatepicker.components.DateTimePicker departuredatepicker;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    public static javax.swing.JTextField txtflightnumber;
    // End of variables declaration//GEN-END:variables

    
}
